definitions:
  models.Option:
    properties:
      id:
        type: string
      name:
        type: string
    type: object
  models.Select:
    properties:
      id:
        type: string
      name:
        type: string
      options:
        items:
          $ref: '#/definitions/models.Option'
        type: array
    type: object
  models.SiteResponse:
    properties:
      author:
        type: string
      description:
        type: string
      id:
        type: string
      name:
        type: string
      type:
        type: string
    type: object
  models.httpError:
    properties:
      error:
        type: string
      message:
        type: string
    type: object
  notionapi.Annotations:
    properties:
      bold:
        type: boolean
      code:
        type: boolean
      color:
        type: string
      italic:
        type: boolean
      strikethrough:
        type: boolean
      underline:
        type: boolean
    type: object
  notionapi.Bot:
    type: object
  notionapi.DatabaseMention:
    properties:
      id:
        type: string
    type: object
  notionapi.DateObject:
    properties:
      end:
        type: string
      start:
        type: string
    type: object
  notionapi.Equation:
    properties:
      expression:
        type: string
    type: object
  notionapi.FileObject:
    properties:
      expiry_time:
        type: string
      url:
        type: string
    type: object
  notionapi.Icon:
    properties:
      emoji:
        type: string
      external:
        $ref: '#/definitions/notionapi.FileObject'
      file:
        $ref: '#/definitions/notionapi.FileObject'
      type:
        type: string
    type: object
  notionapi.Image:
    properties:
      caption:
        items:
          $ref: '#/definitions/notionapi.RichText'
        type: array
      external:
        $ref: '#/definitions/notionapi.FileObject'
      file:
        $ref: '#/definitions/notionapi.FileObject'
      type:
        type: string
    type: object
  notionapi.Link:
    properties:
      url:
        type: string
    type: object
  notionapi.Mention:
    properties:
      database:
        $ref: '#/definitions/notionapi.DatabaseMention'
      date:
        $ref: '#/definitions/notionapi.DateObject'
      page:
        $ref: '#/definitions/notionapi.PageMention'
      template_mention:
        $ref: '#/definitions/notionapi.TemplateMention'
      type:
        type: string
      user:
        $ref: '#/definitions/notionapi.User'
    type: object
  notionapi.Page:
    properties:
      archived:
        type: boolean
      cover:
        $ref: '#/definitions/notionapi.Image'
      created_by:
        $ref: '#/definitions/notionapi.User'
      created_time:
        type: string
      icon:
        $ref: '#/definitions/notionapi.Icon'
      id:
        type: string
      last_edited_by:
        $ref: '#/definitions/notionapi.User'
      last_edited_time:
        type: string
      object:
        type: string
      parent:
        $ref: '#/definitions/notionapi.Parent'
      properties:
        $ref: '#/definitions/notionapi.Properties'
      url:
        type: string
    type: object
  notionapi.PageMention:
    properties:
      id:
        type: string
    type: object
  notionapi.Parent:
    properties:
      block_id:
        type: string
      database_id:
        type: string
      page_id:
        type: string
      type:
        type: string
      workspace:
        type: boolean
    type: object
  notionapi.Person:
    properties:
      email:
        type: string
    type: object
  notionapi.Properties:
    additionalProperties: {}
    type: object
  notionapi.RichText:
    properties:
      annotations:
        $ref: '#/definitions/notionapi.Annotations'
      equation:
        $ref: '#/definitions/notionapi.Equation'
      href:
        type: string
      mention:
        $ref: '#/definitions/notionapi.Mention'
      plain_text:
        type: string
      text:
        $ref: '#/definitions/notionapi.Text'
      type:
        type: string
    type: object
  notionapi.TemplateMention:
    properties:
      template_mention_date:
        type: string
      template_mention_user:
        type: string
      type:
        type: string
    type: object
  notionapi.Text:
    properties:
      content:
        type: string
      link:
        $ref: '#/definitions/notionapi.Link'
    type: object
  notionapi.User:
    properties:
      avatar_url:
        type: string
      bot:
        $ref: '#/definitions/notionapi.Bot'
      id:
        type: string
      name:
        type: string
      object:
        type: string
      person:
        $ref: '#/definitions/notionapi.Person'
      type:
        type: string
    type: object
info:
  contact:
    email: mattia@mattiamueggler.ch
    name: API Support
  description: OAuth Login
  title: Notion Database Forms
  version: "1.0"
paths:
  /api/v1/pages:
    get:
      consumes:
        - application/json
      description: List all pages and databases
      parameters:
        - description: showpages
          in: path
          name: showpages
          required: true
          type: string
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.SiteResponse'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.httpError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.httpError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.httpError'
      security:
        - Bearer: []
      tags:
        - Pages
  /api/v1/pages/{databaseId}:
    post:
      consumes:
        - application/json
      description: Create a new database record
      parameters:
        - description: databaseId
          in: path
          name: databaseId
          required: true
          type: string
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/notionapi.Page'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.httpError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.httpError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.httpError'
      security:
        - Bearer: []
      tags:
        - Pages
  /api/v1/pages/{databaseId}/options:
    get:
      consumes:
        - application/json
      parameters:
        - description: databaseId
          in: path
          name: databaseId
          required: true
          type: string
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Select'
            type: array
      tags:
        - Pages
  /api/v1/pages/{databaseId}/options/{select}:
    get:
      consumes:
        - application/json
      description: Get all select options
      parameters:
        - description: databaseId
          in: path
          name: databaseId
          required: true
          type: string
        - description: select
          in: path
          name: select
          required: true
          type: string
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Select'
            type: array
      tags:
        - Pages
  /api/v1/pages/{type}/{id}:
    post:
      consumes:
        - application/json
      description: List a specific page or database
      parameters:
        - description: type
          in: path
          name: type
          required: true
          type: string
        - description: id
          in: path
          name: id
          required: true
          type: string
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/notionapi.Page'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.httpError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.httpError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.httpError'
      security:
        - Bearer: []
      tags:
        - Pages
securityDefinitions:
  Bearer:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
